
Module UIFunctions

    Public Sub CheckDBConfig()
        Dim registry As New APPRegistry("APP-Integration")
        If Not registry.isExist() Then
            DBConfigForm.ShowDialog()
        End If
    End Sub

    Public Sub SetTransparentUI()
        MainForm.lblTitle.Parent = MainForm.header
        MainForm.lblTitle.BackColor = Color.Transparent
        MainForm.imgIcon.Parent = MainForm.header
        MainForm.imgIcon.BackColor = Color.Transparent

    End Sub
    Public Sub SetDBConfUI()
        DBConfigForm.panelInteg.AutoScroll = True
        DBConfigForm.lblTitle.Parent = DBConfigForm.header
        DBConfigForm.lblTitle.BackColor = Color.Transparent
        DBConfigForm.ConfLog.Clear()
        DBConfigForm.ConfLog.Columns.Add("Configuration - Log", 500, HorizontalAlignment.Left)
        Call PopulateData()
    End Sub
    Public Sub SetFileConfUI()
        IntegrationFileLocationConfig.lblTitle.Parent = IntegrationFileLocationConfig.header
        IntegrationFileLocationConfig.lblTitle.BackColor = Color.Transparent

    End Sub
    Public Sub SETAPIConfUI()
        IntegrationAPIConfig.lblTitle.Parent = IntegrationAPIConfig.header
        IntegrationAPIConfig.lblTitle.BackColor = Color.Transparent
    End Sub
    Public Sub SetAPPConfUI()
        ApplicationConfigurationForm.lblTitle.Parent = ApplicationConfigurationForm.header
        ApplicationConfigurationForm.lblTitle.BackColor = Color.Transparent

        'Get Control Active if Integration Type is File Integration
        If Not oRegistry.GetKeyValue("IntegType") = "FILE" Then
            ApplicationConfigurationForm.GroupBox3.Enabled = False
        End If

    End Sub
    Public Sub SETModuleUI()
        ModuleConfiguration.lblTitle.Parent = ModuleConfiguration.header
        ModuleConfiguration.lblTitle.BackColor = Color.Transparent

    End Sub

    Public Sub SetFieldMapUI()
        IntegrationMappingConfiguration.lblTitle.Parent = IntegrationMappingConfiguration.header
        IntegrationMappingConfiguration.lblTitle.BackColor = Color.Transparent
    End Sub

    Public Sub SetMapUI(ByVal ModuleName As String)
        MappingFieldModuleForm.lblTitle.Parent = MappingFieldModuleForm.header
        MappingFieldModuleForm.lblTitle.BackColor = Color.Transparent
        MappingFieldModuleForm.lblTitle.Text = ModuleName
    End Sub

    Public Sub SetAPPConfTable()
        Try
            If oRegistry.GetKeyValue("ServerType") = 9 Then
                Dim oDotnet As APP_HANADb
                oDotnet = New APP_HANADb(oRegistry.GetKeyValue("ServerName"), oRegistry.GetKeyValue("UserName"), AppTech.Decrypt(oRegistry.GetKeyValue("Password")), oRegistry.GetKeyValue("Database"))
                oDotnet.strCommand = "SELECT Case When (Count(*)>0) THEN 'TRUE' ELSE 'FALSE' END ""IsExist"" FROM SCHEMAS Where ""SCHEMA_NAME""='APP_Integration';"
                If oDotnet.GetField(, "IsExist") = False Then
                    oDotnet.strCommand = "CREATE SCHEMA ""APP_Integration"""
                    oDotnet.strCommand = "SELECT Case When (Count(*)>0) THEN 'TRUE' ELSE 'FALSE' END ""IsExist"" FROM OBJECTS Where ""SCHEMA_NAME""='APP_Integration' and ""OBJECT_TYPE""='TABLE' and ""OBJECT_NAME""='APP_Modules';"
                    If oDotnet.GetField(, "IsExist") = False Then
                        oDotnet.strCommand = "CREATE TABLE ""APP_Integration"".""APP_Modules""(""Id"" INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,""Code"" NVARCHAR(50),""Name"" NVARCHAR(200),""Include"" NVARCHAR(50),""Type"" NVARCHAR(50),""CreatedDate"" LONGDATE CS_LONGDATE,""CreatedBy"" NVARCHAR(30),""UpdatedDate"" LONGDATE CS_LONGDATE,""UpdatedBy"" NVARCHAR(30));"
                    End If
                End If

            ElseIf oRegistry.GetKeyValue("ServerType") = 6 Or oRegistry.GetKeyValue("ServerType") = 7 Or oRegistry.GetKeyValue("ServerType") = 8 Or oRegistry.GetKeyValue("ServerType") = 10 Then
                Dim oDotnet As App_SqlDb
                oDotnet = New App_SqlDb(oRegistry.GetKeyValue("ServerName"), oRegistry.GetKeyValue("UserName"), AppTech.Decrypt(oRegistry.GetKeyValue("Password")), oRegistry.GetKeyValue("Database"))
                oDotnet.strCommand = "IF NOT EXISTS(SELECT NAME FROM MASTER..SYSdatabases WHERE DB_name(dbid) = 'APP_Integration') BEGIN CREATE DATABASE [APP_Integration] END SELECT GETDATE()"
                oDotnet.strCommand = "IF NOT EXISTS(SELECT NAME FROM [APP_Integration]..SYSObjects WHERE name = 'APP_Modules') BEGIN CREATE TABLE [APP_Integration]..[APP_Modules] (Id int identity(1,1) PRIMARY KEY, Code nvarchar(50), Name nvarchar(200),Include nvarchar(50),Type NVARCHAR(50), CreatedDate date, CreatedBy nvarchar(30), UpdateDate date,UpdatedBy nvarchar(30)) END SELECT GETDATE()"
            End If
        Catch ex As Exception
            AppTech.SetMessage(ex.ToString, App_DotNet.App_MessageType.oError)
        End Try

        Try
            Select Case oRegistry.GetKeyValue("IntegMode")
                Case "DI API"
                    ApplicationConfigurationForm.rbDIAPI.Checked = True
                Case "SERVICE LAYER"
                    ApplicationConfigurationForm.rbServiceLayer.Checked = True
            End Select
        Catch ex As Exception

        End Try

        Try
            Select Case oRegistry.GetKeyValue("FileType")
                Case "XML"
                    ApplicationConfigurationForm.rbXML.Checked = True
                Case "EXCEL"
                    ApplicationConfigurationForm.rbExcel.Checked = True
                Case "CSV"
                    ApplicationConfigurationForm.rbCSV.Checked = True
                Case "TAB DELIMITED"
                    ApplicationConfigurationForm.rbTABDel.Checked = True
            End Select
        Catch ex As Exception

        End Try
    End Sub
    Public Sub CheckFormsIncluded()
        Try
            MainForm.frmPanelInbound.Controls.Clear()
            MainForm.frmPanelOutbound.Controls.Clear()

            If oRegistry.GetKeyValue("ServerType") = 9 Then
                Dim oDotnet As APP_HANADb
                oDotnet = New APP_HANADb(oRegistry.GetKeyValue("ServerName"), oRegistry.GetKeyValue("UserName"), AppTech.Decrypt(oRegistry.GetKeyValue("Password")), oRegistry.GetKeyValue("Database"))
                oDotnet.strCommand = "SELECT * FROM ""APP_Integration"".""APP_Modules"" Where ""Include""='Y'"

                For Each oForm As DataRow In oDotnet.Ds.Tables(0).Rows
                    Select Case oForm("Type")
                        Case "Inbound"
                            Select Case oForm("Name")
                                Case "Item Master Data"
                                    frmItemMasterData___Inbound.TopLevel = False
                                    frmItemMasterData___Inbound.Dock = DockStyle.Top
                                    MainForm.frmPanelInbound.Controls.Add(frmItemMasterData___Inbound)
                                    MainForm.frmPanelInbound.Controls.SetChildIndex(frmItemMasterData___Inbound, 0)
                                    frmItemMasterData___Inbound.Show()
                                Case "BP Master Data"
                                    frmBPMaster___Inbound.TopLevel = False
                                    frmBPMaster___Inbound.Dock = DockStyle.Top
                                    MainForm.frmPanelInbound.Controls.Add(frmBPMaster___Inbound)
                                    MainForm.frmPanelInbound.Controls.SetChildIndex(frmBPMaster___Inbound, 0)
                                    frmBPMaster___Inbound.Show()
                                Case "BOM"
                                    frmBOM___Inbound.TopLevel = False
                                    frmBOM___Inbound.Dock = DockStyle.Top
                                    MainForm.frmPanelInbound.Controls.Add(frmBOM___Inbound)
                                    MainForm.frmPanelInbound.Controls.SetChildIndex(frmBOM___Inbound, 0)
                                    frmBOM___Inbound.Show()
                                Case "Purchase Request"
                                    frmPR___Inbound.TopLevel = False
                                    frmPR___Inbound.Dock = DockStyle.Top
                                    MainForm.frmPanelInbound.Controls.Add(frmPR___Inbound)
                                    MainForm.frmPanelInbound.Controls.SetChildIndex(frmPR___Inbound, 0)
                                    frmPR___Inbound.Show()
                                Case "Purchase Order"
                                    frmPO___Inbound.TopLevel = False
                                    frmPO___Inbound.Dock = DockStyle.Top
                                    MainForm.frmPanelInbound.Controls.Add(frmPO___Inbound)
                                    MainForm.frmPanelInbound.Controls.SetChildIndex(frmPO___Inbound, 0)
                                    frmPO___Inbound.Show()
                                Case "AR Invoice"
                                    frmARInvoice___Inbound.TopLevel = False
                                    frmARInvoice___Inbound.Dock = DockStyle.Top
                                    MainForm.frmPanelInbound.Controls.Add(frmARInvoice___Inbound)
                                    MainForm.frmPanelInbound.Controls.SetChildIndex(frmARInvoice___Inbound, 0)
                                    frmARInvoice___Inbound.Show()
                                Case "AR Credit Memo"
                                    frmARCM___Inbound.TopLevel = False
                                    frmARCM___Inbound.Dock = DockStyle.Top
                                    MainForm.frmPanelInbound.Controls.Add(frmARCM___Inbound)
                                    MainForm.frmPanelInbound.Controls.SetChildIndex(frmARCM___Inbound, 0)
                                    frmARCM___Inbound.Show()
                                Case "AP Invoice"
                                    frmAPInvoice___Inbound.TopLevel = False
                                    frmAPInvoice___Inbound.Dock = DockStyle.Top
                                    MainForm.frmPanelInbound.Controls.Add(frmAPInvoice___Inbound)
                                    MainForm.frmPanelInbound.Controls.SetChildIndex(frmAPInvoice___Inbound, 0)
                                    frmAPInvoice___Inbound.Show()
                                Case "AP Credit Memo"
                                    frmAPCM___Inbound.TopLevel = False
                                    frmAPCM___Inbound.Dock = DockStyle.Top
                                    MainForm.frmPanelInbound.Controls.Add(frmAPCM___Inbound)
                                    MainForm.frmPanelInbound.Controls.SetChildIndex(frmAPCM___Inbound, 0)
                                    frmAPCM___Inbound.Show()
                                Case "Goods Receipt PO"
                                    frmGRPO___Inbound.TopLevel = False
                                    frmGRPO___Inbound.Dock = DockStyle.Top
                                    MainForm.frmPanelInbound.Controls.Add(frmGRPO___Inbound)
                                    MainForm.frmPanelInbound.Controls.SetChildIndex(frmGRPO___Inbound, 0)
                                    frmGRPO___Inbound.Show()
                                Case "Purchase Return"
                                    frmPurchaseReturn___Inbound.TopLevel = False
                                    frmPurchaseReturn___Inbound.Dock = DockStyle.Top
                                    MainForm.frmPanelInbound.Controls.Add(frmPurchaseReturn___Inbound)
                                    MainForm.frmPanelInbound.Controls.SetChildIndex(frmPurchaseReturn___Inbound, 0)
                                    frmPurchaseReturn___Inbound.Show()
                                Case "Delivery"
                                    frmDelivery___Inbound.TopLevel = False
                                    frmDelivery___Inbound.Dock = DockStyle.Top
                                    MainForm.frmPanelInbound.Controls.Add(frmDelivery___Inbound)
                                    MainForm.frmPanelInbound.Controls.SetChildIndex(frmDelivery___Inbound, 0)
                                    frmDelivery___Inbound.Show()
                                Case "Inventory Transfer Request"
                                    frmITR___Inbound.TopLevel = False
                                    frmITR___Inbound.Dock = DockStyle.Top
                                    MainForm.frmPanelInbound.Controls.Add(frmITR___Inbound)
                                    MainForm.frmPanelInbound.Controls.SetChildIndex(frmITR___Inbound, 0)
                                    frmITR___Inbound.Show()
                                Case "Inventory Transfer"
                                    frmIT___Inbound.TopLevel = False
                                    frmIT___Inbound.Dock = DockStyle.Top
                                    MainForm.frmPanelInbound.Controls.Add(frmIT___Inbound)
                                    MainForm.frmPanelInbound.Controls.SetChildIndex(frmIT___Inbound, 0)
                                    frmIT___Inbound.Show()
                                Case "Goods Receipt"
                                    frmGR___Inbound.TopLevel = False
                                    frmGR___Inbound.Dock = DockStyle.Top
                                    MainForm.frmPanelInbound.Controls.Add(frmGR___Inbound)
                                    MainForm.frmPanelInbound.Controls.SetChildIndex(frmGR___Inbound, 0)
                                    frmGR___Inbound.Show()
                                Case "Goods Issue"
                                    frmGI___Inbound.TopLevel = False
                                    frmGI___Inbound.Dock = DockStyle.Top
                                    MainForm.frmPanelInbound.Controls.Add(frmGI___Inbound)
                                    MainForm.frmPanelInbound.Controls.SetChildIndex(frmGI___Inbound, 0)
                                    frmGI___Inbound.Show()
                            End Select
                        Case "Outbound"
                            Select Case oForm("Name")
                                Case "Item Master Data"
                                    frmItemMasterData___Outbound.TopLevel = False
                                    frmItemMasterData___Outbound.Dock = DockStyle.Top
                                    MainForm.frmPanelOutbound.Controls.Add(frmItemMasterData___Outbound)
                                    MainForm.frmPanelOutbound.Controls.SetChildIndex(frmItemMasterData___Outbound, 0)
                                    frmItemMasterData___Outbound.Show()
                                Case "BP Master Data"
                                    frmBPMaster___Outbound.TopLevel = False
                                    frmBPMaster___Outbound.Dock = DockStyle.Top
                                    MainForm.frmPanelOutbound.Controls.Add(frmBPMaster___Outbound)
                                    MainForm.frmPanelOutbound.Controls.SetChildIndex(frmBPMaster___Outbound, 0)
                                    frmBPMaster___Outbound.Show()
                                Case "BOM"
                                    frmBOM___Outbound.TopLevel = False
                                    frmBOM___Outbound.Dock = DockStyle.Top
                                    MainForm.frmPanelOutbound.Controls.Add(frmBOM___Outbound)
                                    MainForm.frmPanelOutbound.Controls.SetChildIndex(frmBOM___Outbound, 0)
                                    frmBOM___Outbound.Show()
                                Case "Purchase Request"
                                    frmPR___Outbound.TopLevel = False
                                    frmPR___Outbound.Dock = DockStyle.Top
                                    MainForm.frmPanelOutbound.Controls.Add(frmPR___Outbound)
                                    MainForm.frmPanelOutbound.Controls.SetChildIndex(frmPR___Outbound, 0)
                                    frmPR___Outbound.Show()
                                Case "Purchase Order"
                                    frmPO___Outbound.TopLevel = False
                                    frmPO___Outbound.Dock = DockStyle.Top
                                    MainForm.frmPanelOutbound.Controls.Add(frmPO___Outbound)
                                    MainForm.frmPanelOutbound.Controls.SetChildIndex(frmPO___Outbound, 0)
                                    frmPO___Outbound.Show()
                                Case "AR Invoice"
                                    frmARInvoice___Outbound.TopLevel = False
                                    frmARInvoice___Outbound.Dock = DockStyle.Top
                                    MainForm.frmPanelOutbound.Controls.Add(frmARInvoice___Outbound)
                                    MainForm.frmPanelOutbound.Controls.SetChildIndex(frmARInvoice___Outbound, 0)
                                    frmARInvoice___Outbound.Show()
                                Case "AR Credit Memo"
                                    frmARCM___Outbound.TopLevel = False
                                    frmARCM___Outbound.Dock = DockStyle.Top
                                    MainForm.frmPanelOutbound.Controls.Add(frmARCM___Outbound)
                                    MainForm.frmPanelOutbound.Controls.SetChildIndex(frmARCM___Outbound, 0)
                                    frmARCM___Outbound.Show()
                                Case "AP Invoice"
                                    frmAPInvoice___Outbound.TopLevel = False
                                    frmAPInvoice___Outbound.Dock = DockStyle.Top
                                    MainForm.frmPanelOutbound.Controls.Add(frmAPInvoice___Outbound)
                                    MainForm.frmPanelOutbound.Controls.SetChildIndex(frmAPInvoice___Outbound, 0)
                                    frmAPInvoice___Outbound.Show()
                                Case "AP Credit Memo"
                                    frmAPCM___Outbound.TopLevel = False
                                    frmAPCM___Outbound.Dock = DockStyle.Top
                                    MainForm.frmPanelOutbound.Controls.Add(frmAPCM___Outbound)
                                    MainForm.frmPanelOutbound.Controls.SetChildIndex(frmAPCM___Outbound, 0)
                                    frmAPCM___Outbound.Show()
                                Case "Goods Receipt PO"
                                    frmGRPO___Outbound.TopLevel = False
                                    frmGRPO___Outbound.Dock = DockStyle.Top
                                    MainForm.frmPanelOutbound.Controls.Add(frmGRPO___Outbound)
                                    MainForm.frmPanelOutbound.Controls.SetChildIndex(frmGRPO___Outbound, 0)
                                    frmGRPO___Outbound.Show()
                                Case "Purchase Return"
                                    frmPurchaseReturn___Outbound.TopLevel = False
                                    frmPurchaseReturn___Outbound.Dock = DockStyle.Top
                                    MainForm.frmPanelOutbound.Controls.Add(frmPurchaseReturn___Outbound)
                                    MainForm.frmPanelOutbound.Controls.SetChildIndex(frmPurchaseReturn___Outbound, 0)
                                    frmPurchaseReturn___Outbound.Show()
                                Case "Delivery"
                                    frmDelivery___Outbound.TopLevel = False
                                    frmDelivery___Outbound.Dock = DockStyle.Top
                                    MainForm.frmPanelOutbound.Controls.Add(frmDelivery___Outbound)
                                    MainForm.frmPanelOutbound.Controls.SetChildIndex(frmDelivery___Outbound, 0)
                                    frmDelivery___Outbound.Show()
                                Case "Inventory Transfer Request"
                                    frmITR___Outbound.TopLevel = False
                                    frmITR___Outbound.Dock = DockStyle.Top
                                    MainForm.frmPanelOutbound.Controls.Add(frmITR___Outbound)
                                    MainForm.frmPanelOutbound.Controls.SetChildIndex(frmITR___Outbound, 0)
                                    frmITR___Outbound.Show()
                                Case "Inventory Transfer"
                                    frmIT___Outbound.TopLevel = False
                                    frmIT___Outbound.Dock = DockStyle.Top
                                    MainForm.frmPanelOutbound.Controls.Add(frmIT___Outbound)
                                    MainForm.frmPanelOutbound.Controls.SetChildIndex(frmIT___Outbound, 0)
                                    frmIT___Outbound.Show()
                                Case "Goods Receipt"
                                    frmGR___Outbound.TopLevel = False
                                    frmGR___Outbound.Dock = DockStyle.Top
                                    MainForm.frmPanelOutbound.Controls.Add(frmGR___Outbound)
                                    MainForm.frmPanelOutbound.Controls.SetChildIndex(frmGR___Outbound, 0)
                                    frmGR___Outbound.Show()
                                Case "Goods Issue"
                                    frmGI___Outbound.TopLevel = False
                                    frmGI___Outbound.Dock = DockStyle.Top
                                    MainForm.frmPanelOutbound.Controls.Add(frmGI___Outbound)
                                    MainForm.frmPanelOutbound.Controls.SetChildIndex(frmGI___Outbound, 0)
                                    frmGI___Outbound.Show()
                            End Select

                    End Select

                Next


            ElseIf oRegistry.GetKeyValue("ServerType") = 6 Or oRegistry.GetKeyValue("ServerType") = 7 Or oRegistry.GetKeyValue("ServerType") = 8 Or oRegistry.GetKeyValue("ServerType") = 10 Then
                Dim oDotnet As App_SqlDb
                oDotnet = New App_SqlDb(oRegistry.GetKeyValue("ServerName"), oRegistry.GetKeyValue("UserName"), AppTech.Decrypt(oRegistry.GetKeyValue("Password")), oRegistry.GetKeyValue("Database"))
                oDotnet.strCommand = "SELECT * FROM APP_Integration..APP_Modules Where Include='Y'"
                For Each oForm As DataRow In oDotnet.Ds.Tables(0).Rows
                    Select Case oForm("Type")
                        Case "Inbound"
                            Select Case oForm("Name")
                                Case "Item Master Data"
                                    frmItemMasterData___Inbound.TopLevel = False
                                    frmItemMasterData___Inbound.Dock = DockStyle.Top
                                    MainForm.frmPanelInbound.Controls.Add(frmItemMasterData___Inbound)
                                    MainForm.frmPanelInbound.Controls.SetChildIndex(frmItemMasterData___Inbound, 0)
                                    frmItemMasterData___Inbound.Show()
                                Case "BP Master Data"
                                    frmBPMaster___Inbound.TopLevel = False
                                    frmBPMaster___Inbound.Dock = DockStyle.Top
                                    MainForm.frmPanelInbound.Controls.Add(frmBPMaster___Inbound)
                                    MainForm.frmPanelInbound.Controls.SetChildIndex(frmBPMaster___Inbound, 0)
                                    frmBPMaster___Inbound.Show()
                                Case "BOM"
                                    frmBOM___Inbound.TopLevel = False
                                    frmBOM___Inbound.Dock = DockStyle.Top
                                    MainForm.frmPanelInbound.Controls.Add(frmBOM___Inbound)
                                    MainForm.frmPanelInbound.Controls.SetChildIndex(frmBOM___Inbound, 0)
                                    frmBOM___Inbound.Show()
                                Case "Purchase Request"
                                    frmPR___Inbound.TopLevel = False
                                    frmPR___Inbound.Dock = DockStyle.Top
                                    MainForm.frmPanelInbound.Controls.Add(frmPR___Inbound)
                                    MainForm.frmPanelInbound.Controls.SetChildIndex(frmPR___Inbound, 0)
                                    frmPR___Inbound.Show()
                                Case "Purchase Order"
                                    frmPO___Inbound.TopLevel = False
                                    frmPO___Inbound.Dock = DockStyle.Top
                                    MainForm.frmPanelInbound.Controls.Add(frmPO___Inbound)
                                    MainForm.frmPanelInbound.Controls.SetChildIndex(frmPO___Inbound, 0)
                                    frmPO___Inbound.Show()
                                Case "AR Invoice"
                                    frmARInvoice___Inbound.TopLevel = False
                                    frmARInvoice___Inbound.Dock = DockStyle.Top
                                    MainForm.frmPanelInbound.Controls.Add(frmARInvoice___Inbound)
                                    MainForm.frmPanelInbound.Controls.SetChildIndex(frmARInvoice___Inbound, 0)
                                    frmARInvoice___Inbound.Show()
                                Case "AR Credit Memo"
                                    frmARCM___Inbound.TopLevel = False
                                    frmARCM___Inbound.Dock = DockStyle.Top
                                    MainForm.frmPanelInbound.Controls.Add(frmARCM___Inbound)
                                    MainForm.frmPanelInbound.Controls.SetChildIndex(frmARCM___Inbound, 0)
                                    frmARCM___Inbound.Show()
                                Case "AP Invoice"
                                    frmAPInvoice___Inbound.TopLevel = False
                                    frmAPInvoice___Inbound.Dock = DockStyle.Top
                                    MainForm.frmPanelInbound.Controls.Add(frmAPInvoice___Inbound)
                                    MainForm.frmPanelInbound.Controls.SetChildIndex(frmAPInvoice___Inbound, 0)
                                    frmAPInvoice___Inbound.Show()
                                Case "AP Credit Memo"
                                    frmAPCM___Inbound.TopLevel = False
                                    frmAPCM___Inbound.Dock = DockStyle.Top
                                    MainForm.frmPanelInbound.Controls.Add(frmAPCM___Inbound)
                                    MainForm.frmPanelInbound.Controls.SetChildIndex(frmAPCM___Inbound, 0)
                                    frmAPCM___Inbound.Show()
                                Case "Goods Receipt PO"
                                    frmGRPO___Inbound.TopLevel = False
                                    frmGRPO___Inbound.Dock = DockStyle.Top
                                    MainForm.frmPanelInbound.Controls.Add(frmGRPO___Inbound)
                                    MainForm.frmPanelInbound.Controls.SetChildIndex(frmGRPO___Inbound, 0)
                                    frmGRPO___Inbound.Show()
                                Case "Purchase Return"
                                    frmPurchaseReturn___Inbound.TopLevel = False
                                    frmPurchaseReturn___Inbound.Dock = DockStyle.Top
                                    MainForm.frmPanelInbound.Controls.Add(frmPurchaseReturn___Inbound)
                                    MainForm.frmPanelInbound.Controls.SetChildIndex(frmPurchaseReturn___Inbound, 0)
                                    frmPurchaseReturn___Inbound.Show()
                                Case "Delivery"
                                    frmDelivery___Inbound.TopLevel = False
                                    frmDelivery___Inbound.Dock = DockStyle.Top
                                    MainForm.frmPanelInbound.Controls.Add(frmDelivery___Inbound)
                                    MainForm.frmPanelInbound.Controls.SetChildIndex(frmDelivery___Inbound, 0)
                                    frmDelivery___Inbound.Show()
                                Case "Inventory Transfer Request"
                                    frmITR___Inbound.TopLevel = False
                                    frmITR___Inbound.Dock = DockStyle.Top
                                    MainForm.frmPanelInbound.Controls.Add(frmITR___Inbound)
                                    MainForm.frmPanelInbound.Controls.SetChildIndex(frmITR___Inbound, 0)
                                    frmITR___Inbound.Show()
                                Case "Inventory Transfer"
                                    frmIT___Inbound.TopLevel = False
                                    frmIT___Inbound.Dock = DockStyle.Top
                                    MainForm.frmPanelInbound.Controls.Add(frmIT___Inbound)
                                    MainForm.frmPanelInbound.Controls.SetChildIndex(frmIT___Inbound, 0)
                                    frmIT___Inbound.Show()
                                Case "Goods Receipt"
                                    frmGR___Inbound.TopLevel = False
                                    frmGR___Inbound.Dock = DockStyle.Top
                                    MainForm.frmPanelInbound.Controls.Add(frmGR___Inbound)
                                    MainForm.frmPanelInbound.Controls.SetChildIndex(frmGR___Inbound, 0)
                                    frmGR___Inbound.Show()
                                Case "Goods Issue"
                                    frmGI___Inbound.TopLevel = False
                                    frmGI___Inbound.Dock = DockStyle.Top
                                    MainForm.frmPanelInbound.Controls.Add(frmGI___Inbound)
                                    MainForm.frmPanelInbound.Controls.SetChildIndex(frmGI___Inbound, 0)
                                    frmGI___Inbound.Show()
                            End Select
                        Case "Outbound"
                            Select Case oForm("Name")
                                Case "Item Master Data"
                                    frmItemMasterData___Outbound.TopLevel = False
                                    frmItemMasterData___Outbound.Dock = DockStyle.Top
                                    MainForm.frmPanelOutbound.Controls.Add(frmItemMasterData___Outbound)
                                    MainForm.frmPanelOutbound.Controls.SetChildIndex(frmItemMasterData___Outbound, 0)
                                    frmItemMasterData___Outbound.Show()
                                Case "BP Master Data"
                                    frmBPMaster___Outbound.TopLevel = False
                                    frmBPMaster___Outbound.Dock = DockStyle.Top
                                    MainForm.frmPanelOutbound.Controls.Add(frmBPMaster___Outbound)
                                    MainForm.frmPanelOutbound.Controls.SetChildIndex(frmBPMaster___Outbound, 0)
                                    frmBPMaster___Outbound.Show()
                                Case "BOM"
                                    frmBOM___Outbound.TopLevel = False
                                    frmBOM___Outbound.Dock = DockStyle.Top
                                    MainForm.frmPanelOutbound.Controls.Add(frmBOM___Outbound)
                                    MainForm.frmPanelOutbound.Controls.SetChildIndex(frmBOM___Outbound, 0)
                                    frmBOM___Outbound.Show()
                                Case "Purchase Request"
                                    frmPR___Outbound.TopLevel = False
                                    frmPR___Outbound.Dock = DockStyle.Top
                                    MainForm.frmPanelOutbound.Controls.Add(frmPR___Outbound)
                                    MainForm.frmPanelOutbound.Controls.SetChildIndex(frmPR___Outbound, 0)
                                    frmPR___Outbound.Show()
                                Case "Purchase Order"
                                    frmPO___Outbound.TopLevel = False
                                    frmPO___Outbound.Dock = DockStyle.Top
                                    MainForm.frmPanelOutbound.Controls.Add(frmPO___Outbound)
                                    MainForm.frmPanelOutbound.Controls.SetChildIndex(frmPO___Outbound, 0)
                                    frmPO___Outbound.Show()
                                Case "AR Invoice"
                                    frmARInvoice___Outbound.TopLevel = False
                                    frmARInvoice___Outbound.Dock = DockStyle.Top
                                    MainForm.frmPanelOutbound.Controls.Add(frmARInvoice___Outbound)
                                    MainForm.frmPanelOutbound.Controls.SetChildIndex(frmARInvoice___Outbound, 0)
                                    frmARInvoice___Outbound.Show()
                                Case "AR Credit Memo"
                                    frmARCM___Outbound.TopLevel = False
                                    frmARCM___Outbound.Dock = DockStyle.Top
                                    MainForm.frmPanelOutbound.Controls.Add(frmARCM___Outbound)
                                    MainForm.frmPanelOutbound.Controls.SetChildIndex(frmARCM___Outbound, 0)
                                    frmARCM___Outbound.Show()
                                Case "AP Invoice"
                                    frmAPInvoice___Outbound.TopLevel = False
                                    frmAPInvoice___Outbound.Dock = DockStyle.Top
                                    MainForm.frmPanelOutbound.Controls.Add(frmAPInvoice___Outbound)
                                    MainForm.frmPanelOutbound.Controls.SetChildIndex(frmAPInvoice___Outbound, 0)
                                    frmAPInvoice___Outbound.Show()
                                Case "AP Credit Memo"
                                    frmAPCM___Outbound.TopLevel = False
                                    frmAPCM___Outbound.Dock = DockStyle.Top
                                    MainForm.frmPanelOutbound.Controls.Add(frmAPCM___Outbound)
                                    MainForm.frmPanelOutbound.Controls.SetChildIndex(frmAPCM___Outbound, 0)
                                    frmAPCM___Outbound.Show()
                                Case "Goods Receipt PO"
                                    frmGRPO___Outbound.TopLevel = False
                                    frmGRPO___Outbound.Dock = DockStyle.Top
                                    MainForm.frmPanelOutbound.Controls.Add(frmGRPO___Outbound)
                                    MainForm.frmPanelOutbound.Controls.SetChildIndex(frmGRPO___Outbound, 0)
                                    frmGRPO___Outbound.Show()
                                Case "Purchase Return"
                                    frmPurchaseReturn___Outbound.TopLevel = False
                                    frmPurchaseReturn___Outbound.Dock = DockStyle.Top
                                    MainForm.frmPanelOutbound.Controls.Add(frmPurchaseReturn___Outbound)
                                    MainForm.frmPanelOutbound.Controls.SetChildIndex(frmPurchaseReturn___Outbound, 0)
                                    frmPurchaseReturn___Outbound.Show()
                                Case "Delivery"
                                    frmDelivery___Outbound.TopLevel = False
                                    frmDelivery___Outbound.Dock = DockStyle.Top
                                    MainForm.frmPanelOutbound.Controls.Add(frmDelivery___Outbound)
                                    MainForm.frmPanelOutbound.Controls.SetChildIndex(frmDelivery___Outbound, 0)
                                    frmDelivery___Outbound.Show()
                                Case "Inventory Transfer Request"
                                    frmITR___Outbound.TopLevel = False
                                    frmITR___Outbound.Dock = DockStyle.Top
                                    MainForm.frmPanelOutbound.Controls.Add(frmITR___Outbound)
                                    MainForm.frmPanelOutbound.Controls.SetChildIndex(frmITR___Outbound, 0)
                                    frmITR___Outbound.Show()
                                Case "Inventory Transfer"
                                    frmIT___Outbound.TopLevel = False
                                    frmIT___Outbound.Dock = DockStyle.Top
                                    MainForm.frmPanelOutbound.Controls.Add(frmIT___Outbound)
                                    MainForm.frmPanelOutbound.Controls.SetChildIndex(frmIT___Outbound, 0)
                                    frmIT___Outbound.Show()
                                Case "Goods Receipt"
                                    frmGR___Outbound.TopLevel = False
                                    frmGR___Outbound.Dock = DockStyle.Top
                                    MainForm.frmPanelOutbound.Controls.Add(frmGR___Outbound)
                                    MainForm.frmPanelOutbound.Controls.SetChildIndex(frmGR___Outbound, 0)
                                    frmGR___Outbound.Show()
                                Case "Goods Issue"
                                    frmGI___Outbound.TopLevel = False
                                    frmGI___Outbound.Dock = DockStyle.Top
                                    MainForm.frmPanelOutbound.Controls.Add(frmGI___Outbound)
                                    MainForm.frmPanelOutbound.Controls.SetChildIndex(frmGI___Outbound, 0)
                                    frmGI___Outbound.Show()
                            End Select

                    End Select
                Next

            End If
        Catch ex As Exception

        End Try
    End Sub


    Public Function CreateAndLoadTable() As Boolean
        Try

            If oRegistry.GetKeyValue("ServerType") = 9 Then
                Dim oDotnet As APP_HANADb
                oDotnet = New APP_HANADb(oRegistry.GetKeyValue("ServerName"), oRegistry.GetKeyValue("UserName"), AppTech.Decrypt(oRegistry.GetKeyValue("Password")), oRegistry.GetKeyValue("Database"))
                oDotnet.strCommand = "SELECT Case When (Count(*)>0) THEN 'TRUE' ELSE 'FALSE' END ""IsExist"" FROM SCHEMAS Where ""SCHEMA_NAME""='APP_Integration';"
                If oDotnet.GetField(, "IsExist") = False Then
                    oDotnet.strCommand = "CREATE SCHEMA ""APP_Integration"""
                    oDotnet.strCommand = "SELECT Case When (Count(*)>0) THEN 'TRUE' ELSE 'FALSE' END ""IsExist"" FROM OBJECTS Where ""SCHEMA_NAME""='APP_Integration' and ""OBJECT_TYPE""='TABLE' and ""OBJECT_NAME""='APP_Path';"
                    If oDotnet.GetField(, "IsExist") = False Then
                        oDotnet.strCommand = "CREATE TABLE ""APP_Integration"".""APP_Path""(""Id"" INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,""Code"" NVARCHAR(50),""Name"" NVARCHAR(200),""DocType"" NVARCHAR(50),""Direction"" NVARCHAR(50),""LastExportDate"" DATE,""Path"" NVARCHAR(500),""CreatedDate"" LONGDATE CS_LONGDATE,""CreatedBy"" NVARCHAR(30),""UpdatedDate"" LONGDATE CS_LONGDATE,""UpdatedBy"" NVARCHAR(30));"
                        oDotnet.strCommand = "SELECT * FROM ""APP_Integration"".""APP_Path"""

                        For Each oDr As DataRowView In oDotnet.Ds.Tables(0).DefaultView
                            IntegrationFileLocationConfig.Controls.Item(oDr("Name")).Text = oDr("Path")
                        Next
                    End If
                End If

            ElseIf oRegistry.GetKeyValue("ServerType") = 6 Or oRegistry.GetKeyValue("ServerType") = 7 Or oRegistry.GetKeyValue("ServerType") = 8 Or oRegistry.GetKeyValue("ServerType") = 10 Then
                Dim oDotnet As App_SqlDb
                oDotnet = New App_SqlDb(oRegistry.GetKeyValue("ServerName"), oRegistry.GetKeyValue("UserName"), AppTech.Decrypt(oRegistry.GetKeyValue("Password")), oRegistry.GetKeyValue("Database"))
                oDotnet.strCommand = "IF NOT EXISTS(SELECT NAME FROM MASTER..SYSdatabases WHERE DB_name(dbid) = 'APP_Integration') BEGIN CREATE DATABASE [APP_Integration] END SELECT GETDATE()"
                oDotnet.strCommand = "IF NOT EXISTS(SELECT NAME FROM [APP_Integration]..SYSObjects WHERE name = 'APP_Path') BEGIN CREATE TABLE [APP_Integration]..[APP_Path] (Id int identity(1,1) PRIMARY KEY, Code nvarchar(50), Name nvarchar(200),DocType nvarchar(50),Direction nvarchar(50), LastExportDate date,Path NVARCHAR(500), CreatedDate date, CreatedBy nvarchar(30), UpdateDate date,UpdatedBy nvarchar(30)) END SELECT GETDATE()"
                oDotnet.strCommand = "SELECT * FROM APP_Integration..APP_Path"

                For Each oDr As DataRowView In oDotnet.Ds.Tables(0).DefaultView
                    IntegrationFileLocationConfig.Controls.Item(oDr("Name")).Text = oDr("Path")
                Next
            Else
                Return False
            End If

            Return True
        Catch ex As Exception
            Return False
        End Try
    End Function



    Public Sub PopulateData()

        Dim oServerType As New DataTable
        oServerType.Columns.Add("Value")
        oServerType.Columns.Add("Description")
        oServerType.Rows.Add(New Object() {"6", "MSSQL_2008"})
        oServerType.Rows.Add(New Object() {"7", "MSSQL_2012"})
        oServerType.Rows.Add(New Object() {"8", "MSSQL_2014"})
        oServerType.Rows.Add(New Object() {"9", "HANADB"})
        oServerType.Rows.Add(New Object() {"10", "MSSQL_2016"})

        DBConfigForm.cbServerType.DataSource = oServerType
        DBConfigForm.cbServerType.ValueMember = "Value"
        DBConfigForm.cbServerType.DisplayMember = "Description"

        Try
            DBConfigForm.cbServerType.SelectedValue = oRegistry.GetKeyValue("ServerType")
            DBConfigForm.txtServerName.Text = oRegistry.GetKeyValue("ServerName")
            DBConfigForm.txtDB.Text = oRegistry.GetKeyValue("Database")
            DBConfigForm.txtUser.Text = oRegistry.GetKeyValue("UserName")
            DBConfigForm.txtPass.Text = AppTech.Decrypt(oRegistry.GetKeyValue("Password"))
            DBConfigForm.txtLicSer.Text = oRegistry.GetKeyValue("LicenseServer")
            DBConfigForm.txtSAPUser.Text = oRegistry.GetKeyValue("SAPUser")
            DBConfigForm.txtSAPPass.Text = AppTech.Decrypt(oRegistry.GetKeyValue("SAPPass"))

            For Each p As Control In DBConfigForm.panelInteg.Controls
                For Each pint As Control In p.Controls
                    If pint.Name = "txtIntegServer" Then
                        pint.Text = oRegistry.GetKeyValue("POSServer")
                    ElseIf pint.Name = "txtIntegUser" Then
                        pint.Text = oRegistry.GetKeyValue("POSUser")
                    ElseIf pint.Name = "txtIntegPass" Then
                        pint.Text = AppTech.Decrypt(oRegistry.GetKeyValue("POSPass"))
                    ElseIf pint.Name = "txtIntegDB" Then
                        pint.Text = oRegistry.GetKeyValue("IntegDB")
                    End If
                Next
            Next

            Select Case oRegistry.GetKeyValue("IntegType")
                Case "DB"
                    DBConfigForm.rbDB.Checked = True
                Case "FILE"
                    DBConfigForm.rbFile.Checked = True
                Case "API"
                    DBConfigForm.rbAPI.Checked = True
            End Select

        Catch ex As Exception

        End Try

    End Sub
End Module
